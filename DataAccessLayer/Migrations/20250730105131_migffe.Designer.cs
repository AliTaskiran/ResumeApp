// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250730105131_migffe")]
    partial class migffe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFromBot")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages", (string)null);
                });

            modelBuilder.Entity("EntityLayer.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("JobPostingId")
                        .HasColumnType("int");

                    b.Property<double?>("MatchScore")
                        .HasColumnType("float");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobPostingId");

                    b.HasIndex("ResumeId");

                    b.HasIndex("UserId");

                    b.ToTable("JobApplications", (string)null);
                });

            modelBuilder.Entity("EntityLayer.JobPosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFilled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredExperience")
                        .HasColumnType("int");

                    b.Property<string>("RequiredSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalaryMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalaryMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("JobPostings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Tech Solutions A.Ş.",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9655),
                            Description = "Kurumsal müşterilerimiz için web uygulamaları geliştiren ekibimize katılacak, en az 5 yıl deneyimli .NET Developer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9656),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 5,
                            RequiredSkills = "C#, ASP.NET Core, SQL Server, Entity Framework, Azure",
                            SalaryMax = 35000m,
                            SalaryMin = 25000m,
                            Title = "Senior .NET Developer",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Digital Minds",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9668),
                            Description = "E-ticaret projelerimizde görev alacak, modern frontend teknolojilerine hakim React Developer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9669),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "React.js, TypeScript, Redux, REST API, CSS3",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "Frontend Developer (React)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Cloud Systems",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9672),
                            Description = "Bulut altyapımızı yönetecek ve geliştirme süreçlerimizi iyileştirecek DevOps Mühendisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9673),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "Ankara, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Docker, Kubernetes, AWS, CI/CD, Jenkins",
                            SalaryMax = 45000m,
                            SalaryMin = 30000m,
                            Title = "DevOps Mühendisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "AI Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9676),
                            Description = "Yapay zeka projelerimizde görev alacak, Python ve ML konularında deneyimli geliştirici arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9677),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Python, Django, Flask, Machine Learning, PostgreSQL",
                            SalaryMax = 32000m,
                            SalaryMin = 22000m,
                            Title = "Python Backend Developer",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Mobile Tech",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9680),
                            Description = "Cross-platform mobil uygulama geliştirme konusunda deneyimli Flutter Developer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9680),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "Antalya, Türkiye",
                            RequiredExperience = 2,
                            RequiredSkills = "Flutter, Dart, Firebase, REST API, Git",
                            SalaryMax = 28000m,
                            SalaryMin = 18000m,
                            Title = "Mobile Developer (Flutter)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CompanyName = "Enterprise Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9686),
                            Description = "Büyük ölçekli kurumsal projelerde çalışacak Java Spring Developer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9686),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Java, Spring Boot, Spring Security, MySQL, Maven",
                            SalaryMax = 38000m,
                            SalaryMin = 28000m,
                            Title = "Java Spring Developer",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CompanyName = "Web Innovations",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9691),
                            Description = "Modern web teknolojileri ile full stack uygulamalar geliştirecek developer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9691),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Node.js, Express.js, MongoDB, React, TypeScript",
                            SalaryMax = 32000m,
                            SalaryMin = 22000m,
                            Title = "Full Stack Developer (Node.js)",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CompanyName = "Analytics Pro",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9694),
                            Description = "Büyük veri analizi ve makine öğrenmesi projelerinde çalışacak Data Scientist arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9695),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Python, R, SQL, Machine Learning, TensorFlow",
                            SalaryMax = 50000m,
                            SalaryMin = 35000m,
                            Title = "Data Scientist",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CompanyName = "Creative Design Studio",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9698),
                            Description = "Kullanıcı deneyimi odaklı tasarımlar yapacak UI/UX Designer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9699),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Figma, Adobe XD, Sketch, Prototyping, User Research",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "UI/UX Designer",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CompanyName = "Quality Assurance Ltd.",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9703),
                            Description = "Yazılım kalite güvencesi süreçlerinde görev alacak QA Engineer arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9704),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "Ankara, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Selenium, JUnit, TestNG, API Testing, Agile",
                            SalaryMax = 28000m,
                            SalaryMin = 18000m,
                            Title = "QA Test Engineer",
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CompanyName = "Global Finance",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9707),
                            Description = "Finansal analiz ve raporlama konularında deneyimli analist arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9708),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Excel, Financial Modeling, Risk Analysis, CFA",
                            SalaryMax = 35000m,
                            SalaryMin = 25000m,
                            Title = "Finansal Analist",
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            CompanyName = "Risk Management Corp",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9712),
                            Description = "Kurumsal risk yönetimi konularında uzman risk yöneticisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9712),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 5,
                            RequiredSkills = "Risk Assessment, Compliance, Banking Regulations, SAS",
                            SalaryMax = 50000m,
                            SalaryMin = 35000m,
                            Title = "Risk Yöneticisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            CompanyName = "Digital Marketing Pro",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9716),
                            Description = "Dijital pazarlama stratejileri geliştirecek ve yönetecek manager arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9716),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Google Ads, Facebook Ads, SEO, Analytics, Content Marketing",
                            SalaryMax = 32000m,
                            SalaryMin = 22000m,
                            Title = "Digital Marketing Manager",
                            UserId = 1
                        },
                        new
                        {
                            Id = 14,
                            CompanyName = "Content Studio",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9720),
                            Description = "Sosyal medya ve web için içerik üretecek creative content creator arıyoruz.",
                            EmploymentType = "Yarı Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9720),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 2,
                            RequiredSkills = "Copywriting, Social Media, Video Editing, Photoshop",
                            SalaryMax = 18000m,
                            SalaryMin = 12000m,
                            Title = "Content Creator",
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            CompanyName = "Human Resources Plus",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9724),
                            Description = "İnsan kaynakları süreçlerini yönetecek HR uzmanı arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9724),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "Ankara, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Recruitment, Employee Relations, HRIS, Labor Law",
                            SalaryMax = 25000m,
                            SalaryMin = 18000m,
                            Title = "HR Specialist",
                            UserId = 1
                        },
                        new
                        {
                            Id = 16,
                            CompanyName = "Sales Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9727),
                            Description = "B2B satış süreçlerini yönetecek ve ekibi yönlendirecek sales manager arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9728),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 5,
                            RequiredSkills = "B2B Sales, CRM, Negotiation, Team Leadership",
                            SalaryMax = 40000m,
                            SalaryMin = 25000m,
                            Title = "Sales Manager",
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            CompanyName = "Education Center",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9731),
                            Description = "Eğitim programlarını koordine edecek ve öğretmen ekibini yönetecek koordinatör arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9732),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Curriculum Development, Teacher Training, Educational Technology",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "Eğitim Koordinatörü",
                            UserId = 1
                        },
                        new
                        {
                            Id = 18,
                            CompanyName = "Healthcare Management",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9737),
                            Description = "Sağlık kurumlarının yönetim süreçlerini yönetecek sağlık yöneticisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9737),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 5,
                            RequiredSkills = "Healthcare Administration, Medical Terminology, Management",
                            SalaryMax = 45000m,
                            SalaryMin = 30000m,
                            Title = "Sağlık Yöneticisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 19,
                            CompanyName = "Logistics Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9741),
                            Description = "Tedarik zinciri ve lojistik süreçlerini optimize edecek uzman arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9741),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Supply Chain Management, SAP, Warehouse Management",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "Lojistik Uzmanı",
                            UserId = 1
                        },
                        new
                        {
                            Id = 20,
                            CompanyName = "Customer Service Pro",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9744),
                            Description = "Müşteri hizmetleri ekibini yönetecek ve müşteri memnuniyetini artıracak müdür arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9745),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "Ankara, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Customer Service, Team Management, CRM, Communication",
                            SalaryMax = 32000m,
                            SalaryMin = 22000m,
                            Title = "Müşteri Hizmetleri Müdürü",
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            CompanyName = "Legal Consulting",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9748),
                            Description = "Kurumsal hukuk konularında danışmanlık yapacak hukuk müşaviri arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9749),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 6,
                            RequiredSkills = "Corporate Law, Contract Law, Legal Research, Turkish Law",
                            SalaryMax = 60000m,
                            SalaryMin = 40000m,
                            Title = "Hukuk Müşaviri",
                            UserId = 1
                        },
                        new
                        {
                            Id = 22,
                            CompanyName = "Interior Design Studio",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9752),
                            Description = "Konut ve ofis projelerinde iç mimari tasarımları yapacak iç mimar arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9753),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "AutoCAD, 3D Max, SketchUp, Interior Design",
                            SalaryMax = 28000m,
                            SalaryMin = 18000m,
                            Title = "İç Mimar",
                            UserId = 1
                        },
                        new
                        {
                            Id = 23,
                            CompanyName = "Social Media Agency",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9756),
                            Description = "Markaların sosyal medya hesaplarını yönetecek ve içerik stratejileri geliştirecek uzman arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9756),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 2,
                            RequiredSkills = "Social Media Management, Content Creation, Analytics, Photoshop",
                            SalaryMax = 25000m,
                            SalaryMin = 15000m,
                            Title = "Sosyal Medya Uzmanı",
                            UserId = 1
                        },
                        new
                        {
                            Id = 24,
                            CompanyName = "Environmental Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9760),
                            Description = "Çevre koruma ve sürdürülebilirlik projelerinde çalışacak çevre mühendisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9760),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "Ankara, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "Environmental Engineering, Waste Management, Sustainability",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "Çevre Mühendisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 25,
                            CompanyName = "Tourism Management",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9764),
                            Description = "Otel ve turizm işletmelerinin yönetim süreçlerini yönetecek turizm yöneticisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9764),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "Antalya, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Hotel Management, Tourism Marketing, Customer Service",
                            SalaryMax = 28000m,
                            SalaryMin = 18000m,
                            Title = "Turizm Yöneticisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 26,
                            CompanyName = "E-commerce Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9768),
                            Description = "Online satış platformlarını yönetecek ve e-ticaret stratejileri geliştirecek uzman arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9768),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 3,
                            RequiredSkills = "E-commerce Platforms, Digital Marketing, Analytics, Shopify",
                            SalaryMax = 30000m,
                            SalaryMin = 20000m,
                            Title = "E-ticaret Uzmanı",
                            UserId = 1
                        },
                        new
                        {
                            Id = 27,
                            CompanyName = "Cyber Security Pro",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9772),
                            Description = "Kurumsal siber güvenlik süreçlerini yönetecek ve güvenlik açıklarını tespit edecek uzman arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9772),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Network Security, Penetration Testing, Security Tools, CISSP",
                            SalaryMax = 50000m,
                            SalaryMin = 35000m,
                            Title = "Siber Güvenlik Uzmanı",
                            UserId = 1
                        },
                        new
                        {
                            Id = 28,
                            CompanyName = "R&D Innovation",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9776),
                            Description = "Yeni ürün ve teknoloji geliştirme projelerinde çalışacak Ar-Ge mühendisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9776),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = false,
                            Location = "İzmir, Türkiye",
                            RequiredExperience = 4,
                            RequiredSkills = "Research Methods, Product Development, Innovation, Technical Writing",
                            SalaryMax = 35000m,
                            SalaryMin = 25000m,
                            Title = "Ar-Ge Mühendisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 29,
                            CompanyName = "Project Management Solutions",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9779),
                            Description = "Büyük ölçekli projeleri yönetecek ve ekipleri koordine edecek proje yöneticisi arıyoruz.",
                            EmploymentType = "Tam Zamanlı",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9780),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 5,
                            RequiredSkills = "Project Management, Agile, Scrum, Risk Management, PMP",
                            SalaryMax = 45000m,
                            SalaryMin = 30000m,
                            Title = "Proje Yöneticisi",
                            UserId = 1
                        },
                        new
                        {
                            Id = 30,
                            CompanyName = "Tech Startup",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9784),
                            Description = "Yazılım geliştirme alanında staj yapmak isteyen öğrenciler arıyoruz.",
                            EmploymentType = "Staj",
                            ExpiryDate = new DateTime(2025, 8, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9784),
                            IsActive = true,
                            IsFilled = false,
                            IsRemote = true,
                            Location = "İstanbul, Türkiye",
                            RequiredExperience = 0,
                            RequiredSkills = "Basic Programming, Learning Ability, Team Work, Communication",
                            SalaryMax = 8000m,
                            SalaryMin = 5000m,
                            Title = "Yazılım Geliştirici Stajyeri",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("EntityLayer.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GithubProfile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainResume")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedInProfile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParsedContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Resumes", (string)null);
                });

            modelBuilder.Entity("EntityLayer.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyWebsite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Admin Company",
                            CreatedDate = new DateTime(2025, 7, 30, 13, 51, 30, 574, DateTimeKind.Local).AddTicks(9456),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsEmployer = true,
                            LastName = "User",
                            Location = "İstanbul",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("EntityLayer.ChatMessage", b =>
                {
                    b.HasOne("EntityLayer.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EntityLayer.JobApplication", b =>
                {
                    b.HasOne("EntityLayer.JobPosting", null)
                        .WithMany()
                        .HasForeignKey("JobPostingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntityLayer.Resume", null)
                        .WithMany()
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntityLayer.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityLayer.JobPosting", b =>
                {
                    b.HasOne("EntityLayer.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityLayer.Resume", b =>
                {
                    b.HasOne("EntityLayer.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
