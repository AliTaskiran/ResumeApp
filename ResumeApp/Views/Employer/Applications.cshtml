@{
    ViewData["Title"] = "Başvurular";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var applications = ViewBag.Applications as List<object>;
}

@Html.AntiForgeryToken()

<div class="min-h-screen bg-gray-50">
    <div class="py-10">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="md:flex md:items-center md:justify-between">
                <div class="flex-1 min-w-0">
                    <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
                        Başvurular
                    </h2>
                    <p class="mt-1 text-sm text-gray-500">
                        İş ilanlarınıza gelen başvuruları burada görüntüleyebilir ve yönetebilirsiniz.
                    </p>
                </div>
                <div class="mt-4 flex md:mt-0 md:ml-4">
                    <a href="@Url.Action("Dashboard", "Employer")" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        Dashboard'a Dön
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="mt-4 bg-green-50 border border-green-200 rounded-md p-4">
                    <div class="text-sm text-green-600">
                        @TempData["SuccessMessage"]
                    </div>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="mt-4 bg-red-50 border border-red-200 rounded-md p-4">
                    <div class="text-sm text-red-600">
                        @TempData["ErrorMessage"]
                    </div>
                </div>
            }

            @if (applications != null && applications.Any())
            {
                <!-- İstatistik Kartları -->
                <!-- Başvuru Yönetimi Rehberi -->
                <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-blue-800">Başvuru Nasıl Kabul Edilir?</h3>
                            <div class="mt-2 text-sm text-blue-700">
                                <p>1. <strong>"CV Görüntüle"</strong> ile adayın CV'sini inceleyin</p>
                                <p>2. <strong>"Durum Değiştir"</strong> butonuna tıklayın</p>
                                <p>3. <strong>"✅ Kabul Edildi"</strong> seçeneğini seçin</p>
                                <p>4. Aday otomatik olarak bilgilendirilecektir</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
                    @{
                        var totalApplications = applications.Count();
                        var pendingCount = applications.Count(a => ((dynamic)a).StatusNumber == 0);
                        var reviewingCount = applications.Count(a => ((dynamic)a).StatusNumber == 1);
                        var acceptedCount = applications.Count(a => ((dynamic)a).StatusNumber == 2);
                        var rejectedCount = applications.Count(a => ((dynamic)a).StatusNumber == 3);
                    }
                    
                    <div class="bg-white overflow-hidden shadow rounded-lg">
                        <div class="p-5">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-8 h-8 bg-blue-500 rounded-md flex items-center justify-center">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-5 w-0 flex-1">
                                    <dl>
                                        <dt class="text-sm font-medium text-gray-500 truncate">Toplam Başvuru</dt>
                                        <dd class="text-lg font-medium text-gray-900">@totalApplications</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white overflow-hidden shadow rounded-lg">
                        <div class="p-5">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-8 h-8 bg-yellow-500 rounded-md flex items-center justify-center">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-5 w-0 flex-1">
                                    <dl>
                                        <dt class="text-sm font-medium text-gray-500 truncate">Beklemede</dt>
                                        <dd class="text-lg font-medium text-gray-900">@pendingCount</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white overflow-hidden shadow rounded-lg">
                        <div class="p-5">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-8 h-8 bg-green-500 rounded-md flex items-center justify-center">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-5 w-0 flex-1">
                                    <dl>
                                        <dt class="text-sm font-medium text-gray-500 truncate">Kabul Edildi</dt>
                                        <dd class="text-lg font-medium text-gray-900">@acceptedCount</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white overflow-hidden shadow rounded-lg">
                        <div class="p-5">
                            <div class="flex items-center">
                                <div class="flex-shrink-0">
                                    <div class="w-8 h-8 bg-red-500 rounded-md flex items-center justify-center">
                                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div class="ml-5 w-0 flex-1">
                                    <dl>
                                        <dt class="text-sm font-medium text-gray-500 truncate">Reddedildi</dt>
                                        <dd class="text-lg font-medium text-gray-900">@rejectedCount</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="mt-8 flex flex-col">
                @if (applications != null && applications.Any())
                {
                    <!-- Filtreleme -->
                    <div class="mb-4 bg-white p-4 rounded-lg shadow">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div>
                                <label for="searchInput" class="block text-sm font-medium text-gray-700">Aday Ara</label>
                                <input type="text" id="searchInput" placeholder="Aday adı veya email ara..." class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                            </div>
                            <div>
                                <label for="statusFilter" class="block text-sm font-medium text-gray-700">Durum Filtresi</label>
                                <select id="statusFilter" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                    <option value="">Tüm Durumlar</option>
                                    <option value="0">⏳ Beklemede</option>
                                    <option value="1">👀 İnceleniyor</option>
                                    <option value="2">✅ Kabul Edildi</option>
                                    <option value="3">❌ Reddedildi</option>
                                </select>
                            </div>
                            <div>
                                <label for="jobFilter" class="block text-sm font-medium text-gray-700">İş İlanı</label>
                                <select id="jobFilter" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                    <option value="">Tüm İş İlanları</option>
                                    @foreach (var jobTitle in applications.Cast<dynamic>().Select(a => a.JobTitle).Distinct())
                                    {
                                        <option value="@jobTitle">@jobTitle</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                }
                
                <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                        <div class="shadow ring-1 ring-black ring-opacity-5 md:rounded-lg" style="overflow: visible;">
                            @if (applications != null && applications.Any())
                            {
                                <table class="min-w-full divide-y divide-gray-300">
                                    <thead class="bg-gray-50">
                                        <tr>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                Aday
                                            </th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                İş İlanı
                                            </th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                Başvuru Tarihi
                                            </th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                                Durum
                                            </th>
                                            <th scope="col" class="relative px-6 py-3">
                                                <span class="sr-only">İşlemler</span>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white divide-y divide-gray-200">
                                        @foreach (dynamic application in applications)
                                        {
                                            <tr>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <div class="flex items-center">
                                                        <div class="flex-shrink-0 h-10 w-10">
                                                            <div class="h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center">
                                                                <span class="text-sm font-medium text-indigo-700">
                                                                    @application.CandidateName.Substring(0, 1)
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div class="ml-4">
                                                            <div class="text-sm font-medium text-gray-900">
                                                                @application.CandidateName
                                                            </div>
                                                            <div class="text-sm text-gray-500">
                                                                @application.CandidateEmail
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <div class="text-sm text-gray-900">@application.JobTitle</div>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <div class="text-sm text-gray-900">
                                                        @((DateTime)application.ApplicationDate).ToString("dd.MM.yyyy")
                                                    </div>
                                                    <div class="text-sm text-gray-500">
                                                        @((DateTime)application.ApplicationDate).ToString("HH:mm")
                                                    </div>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    @{
                                                        var statusClass = application.Status == "Beklemede" ? "bg-yellow-100 text-yellow-800" :
                                                                         application.Status == "İnceleniyor" ? "bg-blue-100 text-blue-800" :
                                                                         application.Status == "Kabul Edildi" ? "bg-green-100 text-green-800" :
                                                                         "bg-red-100 text-red-800";
                                                    }
                                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @statusClass">
                                                        @application.Status
                                                    </span>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                                    <div class="flex space-x-2">
                                                        <a href="@Url.Action("ViewResume", "Employer", new { resumeId = application.ResumeId })" target="_blank" class="text-indigo-600 hover:text-indigo-900">
                                                            CV Görüntüle
                                                        </a>
                                                        
                                                        <div class="relative inline-block text-left">
                                                            <button type="button" onclick="toggleDropdown(@application.ApplicationId)" class="text-gray-600 hover:text-gray-900" id="status-menu-@application.ApplicationId">
                                                                Durum Değiştir
                                                                <svg class="ml-1 h-4 w-4 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                                                </svg>
                                                            </button>
                                                            <div id="dropdown-@application.ApplicationId" class="hidden origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-xl bg-white border border-gray-200" style="z-index: 1000;">
                                                                <div class="py-1">
                                                                    <button onclick="updateStatus(@application.ApplicationId, 0)" class="@(application.StatusNumber == 0 ? "bg-gray-100" : "") block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left">
                                                                        ⏳ Beklemede
                                                                    </button>
                                                                    <button onclick="updateStatus(@application.ApplicationId, 1)" class="@(application.StatusNumber == 1 ? "bg-gray-100" : "") block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left">
                                                                        👀 İnceleniyor
                                                                    </button>
                                                                    <button onclick="updateStatus(@application.ApplicationId, 2)" class="@(application.StatusNumber == 2 ? "bg-gray-100" : "") block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left">
                                                                        ✅ Kabul Edildi
                                                                    </button>
                                                                    <button onclick="updateStatus(@application.ApplicationId, 3)" class="@(application.StatusNumber == 3 ? "bg-gray-100" : "") block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 w-full text-left">
                                                                        ❌ Reddedildi
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="text-center py-12">
                                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                                    </svg>
                                    <h3 class="mt-2 text-sm font-medium text-gray-900">Henüz başvuru yok</h3>
                                    <p class="mt-1 text-sm text-gray-500">İş ilanlarınıza başvuru geldiğinde burada görüntülenecek.</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleDropdown(applicationId) {
        console.log('toggleDropdown çağrıldı:', applicationId);
        const dropdown = document.getElementById(`dropdown-${applicationId}`);
        console.log('Dropdown element:', dropdown);
        
        if (!dropdown) {
            console.error('Dropdown bulunamadı:', `dropdown-${applicationId}`);
            return;
        }
        
        // Tüm dropdown'ları kapat
        document.querySelectorAll('[id^="dropdown-"]').forEach(d => {
            if (d.id !== `dropdown-${applicationId}`) {
                d.classList.add('hidden');
            }
        });
        
        // Bu dropdown'ı aç/kapat
        dropdown.classList.toggle('hidden');
        console.log('Dropdown durumu:', dropdown.classList.contains('hidden') ? 'Kapalı' : 'Açık');
    }

    function updateStatus(applicationId, status) {
        console.log('updateStatus çağrıldı:', applicationId, status);
        
        const statusNames = {
            0: 'Beklemede',
            1: 'İnceleniyor', 
            2: 'Kabul Edildi',
            3: 'Reddedildi'
        };
        
        if (confirm(`Bu başvuruyu "${statusNames[status]}" olarak işaretlemek istediğinizden emin misiniz?`)) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("UpdateApplicationStatus", "Employer")';
            
            const applicationIdInput = document.createElement('input');
            applicationIdInput.type = 'hidden';
            applicationIdInput.name = 'applicationId';
            applicationIdInput.value = applicationId;
            
            const statusInput = document.createElement('input');
            statusInput.type = 'hidden';
            statusInput.name = 'status';
            statusInput.value = status;
            
            // CSRF token ekleme
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }
            
            form.appendChild(applicationIdInput);
            form.appendChild(statusInput);
            
            document.body.appendChild(form);
            form.submit();
        }
    }



    // Filtreleme işlevselliği
    function filterApplications() {
        const searchTerm = document.getElementById('searchInput')?.value.toLowerCase() || '';
        const statusFilter = document.getElementById('statusFilter')?.value || '';
        const jobFilter = document.getElementById('jobFilter')?.value || '';
        
        const rows = document.querySelectorAll('tbody tr');
        
        rows.forEach(row => {
            const candidateName = row.querySelector('td:first-child .text-sm.font-medium').textContent.toLowerCase();
            const candidateEmail = row.querySelector('td:first-child .text-sm.text-gray-500').textContent.toLowerCase();
            const jobTitle = row.querySelector('td:nth-child(2)').textContent.trim();
            const statusElement = row.querySelector('td:nth-child(4) span');
            
            // Status değerini dropdown butonlarından al
            let rowStatus = '';
            const dropdownButtons = row.querySelectorAll('[onclick*="updateStatus"]');
            dropdownButtons.forEach(button => {
                if (button.classList.contains('bg-gray-100')) {
                    const onclickValue = button.getAttribute('onclick');
                    const statusMatch = onclickValue.match(/updateStatus\(\d+, (\d+)\)/);
                    if (statusMatch) {
                        rowStatus = statusMatch[1];
                    }
                }
            });
            
            const searchMatch = candidateName.includes(searchTerm) || candidateEmail.includes(searchTerm);
            const statusMatch = statusFilter === '' || rowStatus === statusFilter;
            const jobMatch = jobFilter === '' || jobTitle === jobFilter;
            
            if (searchMatch && statusMatch && jobMatch) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
        
        // İstatistikleri güncelle
        updateStatistics();
    }
    
    function updateStatistics() {
        const visibleRows = document.querySelectorAll('tbody tr[style=""], tbody tr:not([style])');
        const totalVisible = visibleRows.length;
        
        // İstatistik kartlarını güncelle
        const totalCard = document.querySelector('.bg-blue-500').closest('.bg-white').querySelector('dd');
        if (totalCard) {
            totalCard.textContent = totalVisible;
        }
    }
    
    // Event listener'ları ekle
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const jobFilter = document.getElementById('jobFilter');
        
        if (searchInput) {
            searchInput.addEventListener('input', filterApplications);
        }
        if (statusFilter) {
            statusFilter.addEventListener('change', filterApplications);
        }
        if (jobFilter) {
            jobFilter.addEventListener('change', filterApplications);
        }
    });

    // Dropdown'ları kapatmak için document click event
    document.addEventListener('click', function(event) {
        if (!event.target.matches('[id^="status-menu-"]')) {
            document.querySelectorAll('[id^="dropdown-"]').forEach(d => {
                d.classList.add('hidden');
            });
        }
    });
</script> 